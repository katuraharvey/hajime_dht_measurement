#! /bin/sh
### BEGIN INIT INFO
# Provides:          kadnode
# Required-Start:    $syslog $network $named
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop KadNode DNS service
### END INIT INFO

# Author: Moritz Warning <moritzwarning@web.de>


CONFIG_FILE="/etc/kadnode/kadnode.conf"
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="P2P DNS service"
NAME=kadnode
PIDFILE=/var/run/$NAME.pid
DAEMON=/usr/bin/$NAME
SCRIPTNAME=/etc/init.d/$NAME
VERBOSE="yes"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME


# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions


do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
		|| return 1
	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \
		--daemon --pidfile "$PIDFILE" ${CONFIG_FILE:+--config "$CONFIG_FILE"} \
		|| return 2
}

do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred

	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2

	start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON
	[ "$?" = 2 ] && return 2

	rm -f $PIDFILE
	return "$RETVAL"
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1)
			[ "$VERBOSE" != no ] && log_end_msg 0
			exit 0
		;;
		2)
			[ "$VERBOSE" != no ] && log_end_msg 1
			exit 1
		;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1)
			[ "$VERBOSE" != no ] && log_end_msg 0
			exit 0
		;;
		2)
			[ "$VERBOSE" != no ] && log_end_msg 1
			exit 1
		;;
	esac
	exit 0
	;;
  status)
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status}" >&2
	exit 3
	;;
esac
